#!/usr/bin/env python
# Echo the NATO phoenetic alphabet, or convert an input string to it

# TODO: one line per word mode?

import sys

nato = {
"a": 'Alfa',
"b": 'Bravo',
"c": 'Charlie',
"d": 'Delta',
"e": 'Echo',
"f": 'Foxtrot',
"g": 'Golf',
"h": 'Hotel',
"i": 'India',
"j": 'Juliet',
"k": 'Kilo',
"l": 'Lima',
"m": 'Mike',
"n": 'November',
"o": 'Oscar',
"p": 'Papa',
"q": 'Quebec',
"r": 'Romeo',
"s": 'Sierra',
"t": 'Tango',
"u": 'Uniform',
"v": 'Victor',
"w": 'Whiskey',
"x": 'Xray',
"y": 'Yankee',
"z": 'Zulu',
}

if len(sys.argv) <= 1:
	for n in nato.keys():
		print nato[n]
else:
	for arg in sys.argv[1:]:
		for char in arg:
			if char.isupper():
				print "Capital",
			# TODO: Color pretty printing of first character?...
			# if hasattr(sys.stderr, "isatty") and sys.stderr.isatty():
			print nato.get(char.lower(), char) # nato[char], otherwise char
		print # TODO: stop outputting the last damn return carriage...
