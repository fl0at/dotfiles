# Scott Paeth's .tmux.conf
# Uses screen-style bindings since muscle memory, grr.
#
# Much taken from https://mutelight.org/practical-tmux
# Much also drawn from Nicholas Marriot's screen-keys.conf (in /usr/share)

# Mandatory
set -g history-limit 10000
set -g status-keys vi
setw -g mode-keys vi
setw -g xterm-keys on

# Default working directory for new windows
#@@@ This is definitely up to user taste.

# If tmux version < 1.9, such as on RHEL6:
#set default-path .
# If empty, infer from existing shells. (The default value)
# If $HOME or ~, always open there.
# If . then use the working directory when tmux was started. (GNU Screen's default)

### If tmux version is >= 1.9:
#bind c new-window -c "#{pane_current_path}"
# If not set, they always open in the directory where tmux was originally started.
# If set, always opens to the location specified in variable. (Either environment or tmux variable, your choice)
# Warning: this also binds Prefix + C, so be aware if you're dealing with that sequence, or new-window, anywhere else.

# Use C-a prefix, a la GNU Screen
set -g prefix C-a
bind C-a last-window
bind a send-prefix

# Screen-style shortcuts
unbind Space
bind Space next-window
bind C-Space next-window
bind BSpace previous-window
#bind A command-prompt "rename-window %%" # I'll try tmux's Comma binding for now
bind Escape copy-mode # since Prefix+Esc+PgUp doesn't kick in Tmux's Prefix+PgUp
bind K confirm-before "kill-window"
bind M-PPage copy-mode -u # Muscle memory, whoa!
# Note:
# There is no direct equivalent of screen's `number` command.
# You can use swap-window between existing window indices, or move-window into non-existing indices, but they fail if misused.
# No current (as of Tmux 2.1) command allows for both simultaneously.

#@@@ Renumber windows when others are closed?
#set -g renumber-windows on

#@@@ Do you want windows to start from 0 (default), or 1 (like your keyboard)?
#@@@ This one could definitely start wars, so please set or unset it accordingly. :-)
set -g base-index 1
setw -g pane-base-index 1

# Monitor activity or lack thereof, keystrokes similar to Screen.
# bind M conflicts with Screen's keybind, but with no downside: just hit Enter.
bind m setw monitor-activity
bind M command-prompt -p "monitor-silence (seconds)" "setw monitor-silence %%"

# Statusline
set -g status-bg black
set -g status-fg white
setw -g window-status-current-bg blue

# Don't wait for ESC commands. This ain't a VT100.
set -s escape-time 0

#@@@ Mouse support
# Mouse support captures both select *and* scroll events, so your terminal might not behave like you want.
# In Tmux >= 2.1, use this:
#set-option -g mouse on
# Note that the new scrolling support is weird: https://github.com/tmux/tmux/issues/145

# OS X: if you want to use open, or pb* commands, or anything else dealing with the window manager:
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#set-option -g default-command "reattach-to-user-namespace -l @@@YOUR_SHELL@@@"
